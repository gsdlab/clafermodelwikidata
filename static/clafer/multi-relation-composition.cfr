abstract Bundle
    contains ->> Item +

B1 : Bundle
    [ contains in Bread ]
    [ #contains = 2 ]

B2 : Bundle
    [ contains = Milk, Butter ] 

abstract Item
Bread : Item
Butter : Item 
Milk : Item

abstract bundles ->> Bundle
bundlesIB1 : bundles ->> B1 2
bundlesIB2 : bundles ->> B2

allItem ->> Item 6..*

[alloy|
fact {
  compose 
  [ c0_bundles,  c0_bundles_ref
  , c0_contains, ~r_c0_contains, c0_contains_ref
  , c0_allItem,  c0_allItem_ref
  ]
}

pred compose[
  idx: univ, i_elem: idx->univ,
  hd:  univ, sleg:   hd->univ,  tleg: hd->univ,
  res: univ, r_elem: res->univ]               
{
  some r1: res->idx | some r2: res->hd |
   all a: idx, b: hd |
    a.i_elem = b.sleg implies { one r: res | r.r1 = a && r.r2 = b } &&
    #res = #(idx<:i_elem).~(hd<:sleg) &&
    res<:r_elem = r2.(hd<:tleg)
}
|]
