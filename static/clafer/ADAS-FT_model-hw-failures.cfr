abstract System
abstract FunctionalAnalysis
abstract HardwareArchitecture
abstract DeviceNodeClassification
abstract Deployment

abstract FunctionalAnalysisComponent
    deployedTo -> DeviceNode 1..2  // Most functions are at most double redundant
    xor implementation
        hardware
            [deployedTo.type in (EEDeviceNode, SmartDeviceNode)]
        software
            [deployedTo.type in SmartDeviceNode]
abstract AnalysisFunction : FunctionalAnalysisComponent
abstract FunctionalDevice : FunctionalAnalysisComponent
abstract FunctionConnector
    sender -> FunctionalAnalysisComponent
    receiver -> FunctionalAnalysisComponent

enum DeviceNodeType = SmartDeviceNode | EEDeviceNode | PowerDeviceNode

abstract DeviceNode
    [ some fac : FunctionalAnalysisComponent | this in fac.deployedTo ]
    type -> DeviceNodeType

AutoPilot : System
    AP_FAA : FunctionalAnalysis
        frontDriverLidar : FunctionalDevice
            [implementation.hardware]
        frontPassengerLidar : FunctionalDevice
            [implementation.hardware]
        lidarProcessing : AnalysisFunction
            [implementation.software]
        pointCloudClustering : AnalysisFunction
            [implementation.software]
        frontRadar : FunctionalDevice
            [implementation.hardware]
        dynamicObjectDetection : AnalysisFunction
            [implementation.software]
        trajectoryPlanningAP : AnalysisFunction
            [implementation.software]
        speedControl : AnalysisFunction
            [implementation.software]
        frontDriverLidarVal : FunctionConnector
            [sender = frontDriverLidar && receiver = lidarProcessing]
        frontPassengerLidarVal : FunctionConnector
            [sender = frontPassengerLidar && receiver = lidarProcessing]
        compositePointCloud : FunctionConnector
            [sender = lidarProcessing && receiver = pointCloudClustering]
        frontRadarVal : FunctionConnector
            [sender = frontRadar && receiver = dynamicObjectDetection]
        pointCloudCusterVal : FunctionConnector
            [sender = pointCloudClustering && receiver = dynamicObjectDetection]
        dynamicObjects : FunctionConnector
            [sender = dynamicObjectDetection && receiver = trajectoryPlanningAP]
        velocityProfile : FunctionConnector
            [sender = trajectoryPlanningAP && receiver = speedControl]

    AP_HA : HardwareArchitecture
        dn -> AP_DN
        // devices
        AP_DN : DeviceNodeClassification
            visionProcessor1 : DeviceNode ?
                [type = SmartDeviceNode]
            visionProcessor2 : DeviceNode ?
                [type = SmartDeviceNode]
            algorithmProcessor1 : DeviceNode ?
                [type = SmartDeviceNode]
            algorithmProcessor2 : DeviceNode ?
                [type = SmartDeviceNode]

            frontDriverLidarSensor : DeviceNode ?
                [type = EEDeviceNode]
            frontPassengerLidarSensor : DeviceNode ?
                [type = EEDeviceNode]

            frontRadarSensor : DeviceNode ?
                [type = EEDeviceNode]
    // deployment of functions to devices
    AP_Dpl : Deployment
        fa -> AP_FAA
        ha -> AP_HA
        [fa.frontDriverLidar.deployedTo = ha.dn.frontDriverLidarSensor]
        [fa.frontPassengerLidar.deployedTo = ha.dn.frontPassengerLidarSensor]
        [fa.lidarProcessing.deployedTo in (ha.dn.visionProcessor1, ha.dn.visionProcessor2)]
        [fa.pointCloudClustering.deployedTo in (ha.dn.algorithmProcessor1, ha.dn.algorithmProcessor2)]
        [fa.frontRadar.deployedTo = ha.dn.frontRadarSensor]
        [fa.dynamicObjectDetection.deployedTo in (ha.dn.algorithmProcessor1, ha.dn.algorithmProcessor2)]
        [fa.trajectoryPlanningAP.deployedTo in (ha.dn.algorithmProcessor1, ha.dn.algorithmProcessor2)]
        [fa.speedControl.deployedTo in (ha.dn.algorithmProcessor1, ha.dn.algorithmProcessor2)]

[no AP_DN.visionProcessor1]
[no AP_DN.algorithmProcessor1]

[no AP_DN.frontRadarSensor]
